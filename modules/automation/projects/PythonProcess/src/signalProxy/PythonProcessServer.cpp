//autogenerated file SignalProxy
//created at:Do 25. Jul 21:56:10 2013

#include "PythonProcessServer.h"

PythonProcessServer::PythonProcessServer(QIODevice& readDevice, QIODevice& writeDevice)
	: SignalProxy(readDevice, writeDevice)
{}

void PythonProcessServer::logMessage(QString data)
{
	QByteArray msgData;
	QDataStream stream(&msgData, QIODevice::WriteOnly);
	stream << QUuid("{1b576c01-9407-43f0-90a2-f2bfc698fe9c}");
	stream << data;
	transmitSignal(msgData);
}

void PythonProcessServer::logError(QString data)
{
	QByteArray msgData;
	QDataStream stream(&msgData, QIODevice::WriteOnly);
	stream << QUuid("{310b87ef-ffa5-484f-aed7-de941d0752ab}");
	stream << data;
	transmitSignal(msgData);
}

void PythonProcessServer::userRequest(uint id, QString name)
{
	QByteArray msgData;
	QDataStream stream(&msgData, QIODevice::WriteOnly);
	stream << QUuid("{d1b9483a-0c68-4c7c-9758-0015de4b8128}");
	stream << id;
	stream << name;
	transmitSignal(msgData);
}

void PythonProcessServer::processRemoteInputs(const QByteArray& data)
{
	QDataStream stream(data);
	QUuid id;
	stream >> id;

	if(id == QUuid("{3cb98a50-877f-4077-923d-84874faf6be4}")) {
		uint id;
		QVariant button;
		QVariant result;
		stream >> id;
		stream >> button;
		stream >> result;
		emit userRequestAnswer(id, button, result);
		return;
	}

	SignalProxy::handleError(id);
}

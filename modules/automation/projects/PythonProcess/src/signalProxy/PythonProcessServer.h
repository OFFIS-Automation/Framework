//autogenerated file SignalProxy
#ifndef PYTHONPROCESSSERVER_H
#define PYTHONPROCESSSERVER_H

#include "SignalProxy.h"
#include <core/UserRequest.h>

class PythonProcessServer : public SignalProxy
{
	Q_OBJECT
public:
	PythonProcessServer(QIODevice& readDevice, QIODevice& writeDevice);

signals:
	void start(const QString& fileName, const QString& baseDir);
	void addBreakpoint(const QString& file, uint line);
	void removeBreakpoint(const QString& file, int line);
	void resume();
	void stepOver();
	void stepInto();
	void stepReturn();
	void quit();

public slots:
	void scriptPaused(const QString& file, int line);
	void printText(const QString& message);
	void printError(const QString& error);
	void createProgress(int id, const QString& name, int maximum);
	void updateProgress(int id, int progress);
	void removeProgress(int id);
	void createInfoPanel(int id, const QString& title, const QStringList& names);
	void updateInfoPanel(int id, const QStringList& values);
	void removeInfoPanel(int id);
	void clearInfo();
	void appendInfo(const QString& infoStr);
	void userRequest(const UserRequest& request);

private:
	void processRemoteInputs(const QByteArray& data);
};

#endif //PYTHONPROCESSSERVER_H

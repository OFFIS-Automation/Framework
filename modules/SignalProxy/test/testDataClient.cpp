//autogenerated file SignalProxy
//created at:Do 25. Jul 21:39:04 2013

#include "testDataClient.h"

testDataClient::testDataClient(QIODevice& readDevice, QIODevice& writeDevice)
	: SignalProxy(readDevice, writeDevice)
{}

void testDataClient::userRequestAnswer(uint id, QVariant button, QVariant result)
{
	QByteArray msgData;
	QDataStream stream(&msgData, QIODevice::WriteOnly);
	stream << QUuid("{1ec4627e-f40a-4fbd-86cb-4db9ddcb4039}");
	stream << id;
	stream << button;
	stream << result;
	transmitSignal(msgData);
}

void testDataClient::processRemoteInputs(const QByteArray& data)
{
	QDataStream stream(data);
	QUuid id;
	stream >> id;

	if(id == QUuid("{74100c32-6a18-49ba-b4dd-b325ac701051}")) {
		QString data;
		stream >> data;
		emit logMessage(data);
		return;
	}
	if(id == QUuid("{21071990-05e5-4d0d-b294-a660c920fbfa}")) {
		QString data;
		stream >> data;
		emit logError(data);
		return;
	}
	if(id == QUuid("{93f134b8-9574-44be-ab53-a5ec75fc37fe}")) {
		uint id;
		QString name;
		stream >> id;
		stream >> name;
		emit userRequest(id, name);
		return;
	}

	SignalProxy::handleError(id);
}
